---
name: Setup Python
description: Setups latest Python and installs dependencies

inputs:
  python-version:
    description: Python version to install
    default: '3'
  venv-dir:
    description: Directory for Python Virtual Env
    default: .venv
  working-directory:
    description: Action working directory
    default: .

runs:
  using: composite
  steps:
    - name: Load Cached Python dependencies
      uses: actions/cache@v4
      id: python-cache
      with:
        path: ${{ inputs.working-directory }}/${{ inputs.venv-dir }}
        key: ${{ env.CACHE-PREFIX }}-${{ hashFiles(env.HASHED1, env.HASHED2) }}
      env:
        CACHE-PREFIX: setup-python-internal-${{ runner.os }}-${{ runner.arch }}-venv
        HASHED1: ${{ inputs.working-directory }}/**/*requirements.txt
        HASHED2: ${{ inputs.working-directory }}/**/requirements-dev.txt

    - name: Install Python
      uses: actions/setup-python@v5
      with:
        # Reference for setup-python action options
        # https://github.com/actions/setup-python/blob/main/action.yml
        # https://github.com/actions/setup-python/blob/main/docs/advanced-usage.md
        cache: ${{ env.CACHE-HIT != 'true' && 'pip' || env.NOTDEFINED }}
        check-latest: true
        python-version: ${{ inputs.python-version }}
        cache-dependency-path: |
          **/pyproject.toml
          **/requirements.txt
          **/requirements-dev.txt
      env:
        CACHE-HIT: ${{ steps.python-cache.outputs.cache-hit }}

    - name: Display Python and Pip versions
      run: |
        echo
        echo 🐍 Python version: $(python -V)
        echo 🐍 Pip version: $(pip -V)
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Activate Python Virtual Env
      # Enables venv and stores its path for follow-up steps
      run: |
        python -m venv ${{ inputs.venv-dir }}
        . ${{ inputs.venv-dir }}/bin/activate
        echo PATH=$PATH >> $GITHUB_ENV
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Install Python Dependencies
      if: steps.python-cache.outputs.cache-hit != 'true'
      run: |
        python -m venv ${{ inputs.venv-dir }}
        . ${{ inputs.venv-dir }}/bin/activate
        if [ -f "requirements.txt" ]; then
          echo "::group::🐍 Installing dependencies"
          pip install -r requirements.txt
          echo "::endgroup::"
        fi
        if [ -f "requirements-dev.txt" ]; then
          echo "::group::🐍 Installing dev dependencies"
          pip install -r requirements-dev.txt
          echo "::endgroup::"
        fi
      shell: bash
      working-directory: ${{ inputs.working-directory }}
