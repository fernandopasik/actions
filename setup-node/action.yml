name: Setup Node
description: Setups latest Node LTS and installs dependencies

runs:
  using: composite
  steps:
    - name: Detect Node Package Manager
      id: detect-node-pm
      # Detect supported package managers by actions/setup-node
      # npm, pnpm, yarn1, yarn2
      # https://github.com/actions/setup-node/blob/main/src/cache-utils.ts
      run: |
        if [ -f "yarn.lock" ]; then
          if [ -d ".yarn" ]; then
            echo "node-pm=yarn2" >> $GITHUB_OUTPUT
            echo "node-lock=yarn.lock" >> $GITHUB_OUTPUT
          else
            echo "node-pm=yarn1" >> $GITHUB_OUTPUT
            echo "node-lock=yarn.lock" >> $GITHUB_OUTPUT
          fi
        elif [ -f "pnpm-lock.yaml" ]; then
          echo "node-pm=pnpm" >> $GITHUB_OUTPUT
          echo "node-lock=pnpm-lock.yaml" >> $GITHUB_OUTPUT
        else
          echo "node-pm=npm" >> $GITHUB_OUTPUT
          echo "node-lock=package-lock.json" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Display Node Package Manager
      run: |
        echo Package Manager Name: ${{ env.PM }}
        echo Package Manager Lock File: ${{ env.LOCK }}
      shell: bash
      env:
        PM: ${{ steps.detect-node-pm.outputs.node-pm }}
        LOCK: ${{ steps.detect-node-pm.outputs.node-lock }}

    - name: Load Cache NPM dependencies
      uses: actions/cache@v3
      id: node-modules-cache
      with:
        path: |
          node_modules
          .yarn
        key: ${{ runner.os }}-$PM-${{ hashFiles(env.LOCK) }}
      env:
        PM: ${{ steps.detect-node-pm.outputs.node-pm }}
        LOCK: ${{ steps.detect-node-pm.outputs.node-lock }}

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        # Reference for setup-node action options
        # https://github.com/actions/setup-node/blob/main/action.yml
        # https://github.com/actions/setup-node#usage
        cache: ${{ env.CACHE-HIT != 'true' && env.PM }}
        check-latest: true
        node-version: 18
      env:
        PM: ${{ steps.detect-node-pm.outputs.node-pm }}
        CACHE-HIT: ${{ steps.node-modules-cache.outputs.cache-hit }}

    - name: Save Cache NPM dependencies
      uses: actions/cache@v3
      with:
        path: |
          node_modules
          .yarn
        key: ${{ runner.os }}-$PM-${{ hashFiles(env.LOCK) }}
      env:
        PM: ${{ steps.detect-node-pm.outputs.node-pm }}
        LOCK: ${{ steps.detect-node-pm.outputs.node-lock }}

    - name: Install Dependencies
      if: steps.node-modules-cache.outputs.cache-hit != 'true'
      run: |
        if [ $PM == "yarn1" ]; then
          yarn install --frozen-lockfile
        elif [ $PM == "yarn" ]; then
          yarn --immutable
        elif [ $PM == "pnpm" ]; then
          pnpm install --frozen-lockfile
        else
          npm ci
        fi
      shell: bash
      env:
        PM: ${{ steps.detect-node-pm.outputs.node-pm }}
