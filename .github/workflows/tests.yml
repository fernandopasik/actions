---
name: tests
# yamllint disable-line rule:truthy
on:
  push:
    branches: [main]
  pull_request: {}

permissions: read-all

jobs:
  test-setup-node-npm:
    name: Node with npm
    uses: ./.github/workflows/test-setup-node.yml
    with:
      working-directory: ./test/setup-node/npm
    permissions:
      actions: write
  test-setup-node-pnpm:
    name: Node with pnpm
    uses: ./.github/workflows/test-setup-node.yml
    with:
      working-directory: ./test/setup-node/pnpm
    permissions:
      actions: write
  test-setup-node-yarn1:
    name: Node with yarn1
    uses: ./.github/workflows/test-setup-node.yml
    with:
      working-directory: ./test/setup-node/yarn1
    permissions:
      actions: write
  test-setup-node-yarn:
    name: Node with yarn
    uses: ./.github/workflows/test-setup-node.yml
    with:
      working-directory: ./test/setup-node/yarn
    permissions:
      actions: write
  test-setup-python-pip:
    name: Python with pip
    uses: ./.github/workflows/test-setup-python.yml
    with:
      working-directory: ./test/setup-python/pip
    permissions:
      actions: write
  test-setup-python-pipenv:
    name: Python with pipenv
    uses: ./.github/workflows/test-setup-python.yml
    with:
      working-directory: ./test/setup-python/pipenv
    permissions:
      actions: write
  test-setup-python-poetry:
    name: Python with poetry
    uses: ./.github/workflows/test-setup-python.yml
    with:
      working-directory: ./test/setup-python/poetry
    permissions:
      actions: write
  test-setup-ansible:
    name: Test Setup Ansible
    runs-on: ubuntu-latest
    needs: test-setup-python-pip
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: ./setup-python
        with:
          working-directory: ./test/setup-ansible
      - name: Setup Ansible
        uses: ./setup-ansible
        with:
          working-directory: ./test/setup-ansible
  test-cache-ansible:
    name: Test Ansible cache
    runs-on: ubuntu-latest
    needs: test-setup-ansible
    outputs:
      python-global-cache-file: ${{ steps.test-setup-python.outputs.global-cache-file }}
      python-jobs-cache-file: ${{ steps.test-setup-python.outputs.jobs-cache-file }}
      ansible-jobs-cache-key: ${{ steps.test-setup-ansible.outputs.jobs-cache-key }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: ./setup-python
        id: test-setup-python
        with:
          working-directory: ./test/setup-ansible
      - name: Setup Ansible
        uses: ./setup-ansible
        id: test-setup-ansible
        with:
          working-directory: ./test/setup-ansible
      - name: Display Setup Ansible and Python outputs
        run: |
          echo
          echo "üîé python-version: ${{ steps.test-setup-python.outputs.python-version }}"
          echo "üîé package-manager: ${{ steps.test-setup-python.outputs.package-manager }}"
          echo "üîé package-manager-version: ${{ steps.test-setup-python.outputs.package-manager-version }}"
          echo "üîé global-cache-file: ${{ steps.test-setup-python.outputs.global-cache-file }}"
          echo "üîé jobs-cache-file: ${{ steps.test-setup-python.outputs.jobs-cache-file }}"

          echo "üîé ansible-version: ${{ steps.test-setup-ansible.outputs.ansible-version }}"
          echo "üîé ansible-lint-version: ${{ steps.test-setup-ansible.outputs.ansible-lint-version }}"
          echo "üîé ansible-galaxy-version: ${{ steps.test-setup-ansible.outputs.ansible-galaxy-version }}"
          echo "üîé ansible-jobs-cache-key: ${{ steps.test-setup-ansible.outputs.jobs-cache-key }}"
        shell: bash
  delete-cache-ansible:
    name: Delete Ansible and Python cache
    runs-on: ubuntu-latest
    needs: test-cache-ansible
    permissions:
      actions: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Delete github cache
        run: |
          echo
          PYTHON_GLOBAL_CACHE=${{ needs.test-cache-ansible.outputs.python-global-cache-file }}
          PYTHON_JOBS_CACHE=${{ needs.test-cache-ansible.outputs.python-jobs-cache-file }}
          ANSIBLE_JOBS_CACHE=${{ needs.test-cache-ansible.outputs.ansible-jobs-cache-key }}
          echo "‚ùå Deleting cache key: $PYTHON_JOBS_CACHE"
          gh cache delete "$PYTHON_JOBS_CACHE"
          echo "‚ùå Deleting cache key: $PYTHON_GLOBAL_CACHE"
          gh cache delete "$PYTHON_GLOBAL_CACHE"
          echo "‚ùå Deleting cache key: $ANSIBLE_JOBS_CACHE"
          gh cache delete "$ANSIBLE_JOBS_CACHE"
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
