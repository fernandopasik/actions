---
name: main
# yamllint disable-line rule:truthy
on:
  push:
    branches: [main]
  pull_request: {}

permissions: read-all

jobs:
  install-python:
    name: Install Python
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: ./setup-python
  check-format:
    name: Check Format
    runs-on: ubuntu-latest
    needs: install-python
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: fernandopasik/actions/setup-python@main
      - name: Check Format
        run: make format
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: install-python
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: ./setup-python
      - name: Lint
        run: make lint
  test-setup-node-npm:
    name: Test Setup Node with npm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: ./setup-node
        with:
          working-directory: ./test/setup-node/npm
  test-cache-node-npm:
    name: Test Node cache with npm
    runs-on: ubuntu-latest
    needs: test-setup-node-npm
    outputs:
      global-cache-file: ${{ steps.test-setup-node-npm.outputs.global-cache-file }}
      jobs-cache-file: ${{ steps.test-setup-node-npm.outputs.jobs-cache-file }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        id: test-setup-node-npm
        uses: ./setup-node
        with:
          working-directory: ./test/setup-node/npm
      - name: Display Setup Node outputs
        run: |
          echo
          echo "🔎 node-version: ${{ steps.test-setup-node-npm.outputs.node-version }}"
          echo "🔎 package-manager: ${{ steps.test-setup-node-npm.outputs.package-manager }}"
          echo "🔎 package-manager-version: ${{ steps.test-setup-node-npm.outputs.package-manager-version }}"
          echo "🔎 global-cache-file: ${{ steps.test-setup-node-npm.outputs.global-cache-file }}"
          echo "🔎 jobs-cache-file: ${{ steps.test-setup-node-npm.outputs.jobs-cache-file }}"
        shell: bash
  delete-cache-node-npm:
    name: Delete Node cache with npm
    runs-on: ubuntu-latest
    needs: test-cache-node-npm
    permissions:
      actions: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Delete github cache
        run: |
          echo
          GLOBAL_CACHE=${{ needs.test-cache-node-npm.outputs.global-cache-file }}
          JOBS_CACHE=${{ needs.test-cache-node-npm.outputs.jobs-cache-file }}
          echo "❌ Deleting cache key: $JOBS_CACHE"
          gh cache delete "$JOBS_CACHE"
          echo "❌ Deleting cache key: $GLOBAL_CACHE"
          gh cache delete "$GLOBAL_CACHE"
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
  test-setup-node-pnpm:
    name: Test Setup Node with pnpm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: ./setup-node
        with:
          working-directory: ./test/setup-node/pnpm
  test-cache-node-pnpm:
    name: Test Node cache with pnpm
    runs-on: ubuntu-latest
    needs: test-setup-node-pnpm
    outputs:
      global-cache-file: ${{ steps.test-setup-node-pnpm.outputs.global-cache-file }}
      jobs-cache-file: ${{ steps.test-setup-node-pnpm.outputs.jobs-cache-file }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        id: test-setup-node-pnpm
        uses: ./setup-node
        with:
          working-directory: ./test/setup-node/pnpm
      - name: Display Setup Node outputs
        run: |
          echo
          echo "🔎 node-version: ${{ steps.test-setup-node-pnpm.outputs.node-version }}"
          echo "🔎 package-manager: ${{ steps.test-setup-node-pnpm.outputs.package-manager }}"
          echo "🔎 package-manager-version: ${{ steps.test-setup-node-pnpm.outputs.package-manager-version }}"
          echo "🔎 global-cache-file: ${{ steps.test-setup-node-pnpm.outputs.global-cache-file }}"
          echo "🔎 jobs-cache-file: ${{ steps.test-setup-node-pnpm.outputs.jobs-cache-file }}"
        shell: bash
  delete-cache-node-pnpm:
    name: Delete Node cache with pnpm
    runs-on: ubuntu-latest
    needs: test-cache-node-pnpm
    permissions:
      actions: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Delete github cache
        run: |
          echo
          GLOBAL_CACHE=${{ needs.test-cache-node-pnpm.outputs.global-cache-file }}
          JOBS_CACHE=${{ needs.test-cache-node-pnpm.outputs.jobs-cache-file }}
          echo "❌ Deleting cache key: $JOBS_CACHE"
          gh cache delete "$JOBS_CACHE"
          echo "❌ Deleting cache key: $GLOBAL_CACHE"
          gh cache delete "$GLOBAL_CACHE"
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
  test-setup-node-yarn1:
    name: Test Setup Node with yarn1
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: ./setup-node
        with:
          working-directory: ./test/setup-node/yarn1
  test-cache-node-yarn1:
    name: Test Node cache with yarn1
    runs-on: ubuntu-latest
    needs: test-setup-node-yarn1
    outputs:
      global-cache-file: ${{ steps.test-setup-node-yarn1.outputs.global-cache-file }}
      jobs-cache-file: ${{ steps.test-setup-node-yarn1.outputs.jobs-cache-file }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        id: test-setup-node-yarn1
        uses: ./setup-node
        with:
          working-directory: ./test/setup-node/yarn1
      - name: Display Setup Node outputs
        run: |
          echo
          echo "🔎 node-version: ${{ steps.test-setup-node-yarn1.outputs.node-version }}"
          echo "🔎 package-manager: ${{ steps.test-setup-node-yarn1.outputs.package-manager }}"
          echo "🔎 package-manager-version: ${{ steps.test-setup-node-yarn1.outputs.package-manager-version }}"
          echo "🔎 global-cache-file: ${{ steps.test-setup-node-yarn1.outputs.global-cache-file }}"
          echo "🔎 jobs-cache-file: ${{ steps.test-setup-node-yarn1.outputs.jobs-cache-file }}"
        shell: bash
  delete-cache-node-yarn1:
    name: Delete Node cache with yarn1
    runs-on: ubuntu-latest
    needs: test-cache-node-yarn1
    permissions:
      actions: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Delete github cache
        run: |
          echo
          GLOBAL_CACHE=${{ needs.test-cache-node-yarn1.outputs.global-cache-file }}
          JOBS_CACHE=${{ needs.test-cache-node-yarn1.outputs.jobs-cache-file }}
          echo "❌ Deleting cache key: $JOBS_CACHE"
          gh cache delete "$JOBS_CACHE"
          echo "❌ Deleting cache key: $GLOBAL_CACHE"
          gh cache delete "$GLOBAL_CACHE"
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
  test-setup-node-yarn:
    name: Test Setup Node with yarn
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: ./setup-node
        with:
          working-directory: ./test/setup-node/yarn
  test-cache-node-yarn:
    name: Test Node cache with yarn
    runs-on: ubuntu-latest
    needs: test-setup-node-yarn
    outputs:
      global-cache-file: ${{ steps.test-setup-node-yarn.outputs.global-cache-file }}
      jobs-cache-file: ${{ steps.test-setup-node-yarn.outputs.jobs-cache-file }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        id: test-setup-node-yarn
        uses: ./setup-node
        with:
          working-directory: ./test/setup-node/yarn
      - name: Display Setup Node outputs
        run: |
          echo
          echo "🔎 node-version: ${{ steps.test-setup-node-yarn.outputs.node-version }}"
          echo "🔎 package-manager: ${{ steps.test-setup-node-yarn.outputs.package-manager }}"
          echo "🔎 package-manager-version: ${{ steps.test-setup-node-yarn.outputs.package-manager-version }}"
          echo "🔎 global-cache-file: ${{ steps.test-setup-node-yarn.outputs.global-cache-file }}"
          echo "🔎 jobs-cache-file: ${{ steps.test-setup-node-yarn.outputs.jobs-cache-file }}"
        shell: bash
  delete-cache-node-yarn:
    name: Delete Node cache with yarn
    runs-on: ubuntu-latest
    needs: test-cache-node-yarn
    permissions:
      actions: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Delete github cache
        run: |
          echo
          GLOBAL_CACHE=${{ needs.test-cache-node-yarn.outputs.global-cache-file }}
          JOBS_CACHE=${{ needs.test-cache-node-yarn.outputs.jobs-cache-file }}
          echo "❌ Deleting cache key: $JOBS_CACHE"
          gh cache delete "$JOBS_CACHE"
          echo "❌ Deleting cache key: $GLOBAL_CACHE"
          gh cache delete "$GLOBAL_CACHE"
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
  # delete-setup-node-test-cache:
  #   name: Delete Setup Node tests cache
  #   runs-on: ubuntu-latest
  #   needs:
  #     - test-cache-node-npm
  #     - test-cache-node-pnpm
  #     - test-cache-node-yarn1
  #     - test-cache-node-yarn
  #   permissions:
  #     actions: write
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Github API cache delete
  #       run: |
  #         echo
  #         SETUP_NODE_KEYS=$(gh cache list --key setup-node --json key \
  #           --template '{{range .}}{{.key}}{{"\n"}}{{end}}')
  #         NODE_CACHE_KEYS=$(gh cache list --key node-cache --json key \
  #           --template '{{range .}}{{.key}}{{"\n"}}{{end}}')
  #         CACHE_KEYS="$SETUP_NODE_KEYS"$'\n'"$NODE_CACHE_KEYS"

  #         echo "::group::💾 Cache keys to delete"
  #         echo "$CACHE_KEYS"
  #         echo "::endgroup::"

  #         echo "::group::❌ Deleting cache keys"
  #         echo "$CACHE_KEYS" | while IFS= read -r KEY; do
  #           echo "❌ Deleting cache key: $KEY"
  #           gh cache delete "$KEY"
  #         done
  #         echo "::endgroup::"
  #       shell: bash
  #   env:
  #     GH_TOKEN: ${{ github.token }}
  test-setup-python:
    name: Test Setup Python
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: ./setup-python
        with:
          working-directory: ./test/setup-python
  test-cache-python:
    name: Test Python cache
    runs-on: ubuntu-latest
    needs: test-setup-python
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: ./setup-python
        id: test-setup-python
        with:
          working-directory: ./test/setup-python
      - name: Display Setup Python outputs
        run: |
          echo
          echo "🔎 python-version: ${{ steps.test-setup-python.outputs.python-version }}"
          echo "🔎 package-manager: ${{ steps.test-setup-python.outputs.package-manager }}"
          echo "🔎 package-manager-version: ${{ steps.test-setup-python.outputs.package-manager-version }}"
          echo "🔎 global-cache-file: ${{ steps.test-setup-python.outputs.global-cache-file }}"
          echo "🔎 jobs-cache-file: ${{ steps.test-setup-python.outputs.jobs-cache-file }}"
        shell: bash
  test-setup-ansible:
    name: Test Setup Ansible
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: ./setup-python
        with:
          working-directory: ./test/setup-ansible
      - name: Setup Ansible
        uses: ./setup-ansible
        with:
          working-directory: ./test/setup-ansible
  test-cache-ansible:
    name: Test Ansible cache
    runs-on: ubuntu-latest
    needs: test-setup-ansible
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: ./setup-python
        id: test-setup-python
        with:
          working-directory: ./test/setup-ansible
      - name: Setup Ansible
        uses: ./setup-ansible
        with:
          working-directory: ./test/setup-ansible
      - name: Display Setup Ansible and Python outputs
        run: |
          echo
          echo "🔎 python-version: ${{ steps.test-setup-python.outputs.python-version }}"
          echo "🔎 package-manager: ${{ steps.test-setup-python.outputs.package-manager }}"
          echo "🔎 package-manager-version: ${{ steps.test-setup-python.outputs.package-manager-version }}"
          echo "🔎 global-cache-file: ${{ steps.test-setup-python.outputs.global-cache-file }}"
          echo "🔎 jobs-cache-file: ${{ steps.test-setup-python.outputs.jobs-cache-file }}"
        shell: bash
